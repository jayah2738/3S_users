// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Admin {
  id        String   @id @default(cuid()) @map("_id")
  name      String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Grade {
  id          String      @id @default(cuid()) @map("_id")
  name        String
  level       String?     // Made optional
  description String?
  materials   Material[]
  students    Student[]
  teachers    Teacher[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Material {
  id          String   @id @default(cuid()) @map("_id")
  title       String
  description String
  type        String   // 'video' or 'pdf'
  fileUrl     String
  gradeId     String
  grade       Grade    @relation(fields: [gradeId], references: [id])
  subject     String
  lessonType  String   // 'lesson' or 'exercise'
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([gradeId])
  @@index([subject])
  @@index([lessonType])
}

model Student {
  id            String   @id @default(cuid()) @map("_id")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  fullName      String
  username      String   @unique
  level         String
  grade         String
  gender        String
  password      String
  lastLogin     DateTime @default(now())
  isActive      Boolean  @default(true)
  gradeRelation Grade    @relation(fields: [gradeId], references: [id])
  gradeId       String
}

model Message {
  id        String   @id @default(cuid()) @map("_id")
  content   String
  sender    String
  type      String   // 'parent', 'student', or 'admin'
  timestamp DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  teacher   Teacher? @relation(fields: [teacherId], references: [id])
  teacherId String?
}

model Teacher {
  id            String    @id @default(cuid()) @map("_id")
  fullName      String
  username      String    @unique
  password      String
  subject       String
  email         String?
  lastLogin     DateTime  @default(now())
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  gradeRelation Grade     @relation(fields: [gradeId], references: [id])
  gradeId       String
  messages      Message[]
  user          User      @relation(fields: [userId], references: [id])
  userId        String    @unique
}

model User {
  id          String    @id @default(cuid()) @map("_id")
  username    String    @unique
  password    String
  role        String    @default("USER")
  isSuperAdmin Boolean  @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  teacher     Teacher?
}

model Course {
  id          String   @id @default(cuid()) @map("_id")
  title       String
  description String
  type        String   // 'video' or 'pdf'
  fileUrl     String
  cloudinaryId String?
  gradeId     String
  subjectId   String
  createdBy   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([gradeId, subjectId])
  @@index([createdBy])
} 